//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GARMCO.AMS.TAS.DAL.DataModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TASEntities : DbContext
    {
        public TASEntities()
            : base("name=TASEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tran_Timesheet> Tran_Timesheet { get; set; }
        public virtual DbSet<Tran_Timesheet_Extra> Tran_Timesheet_Extra { get; set; }
        public virtual DbSet<Tran_ShiftPatternChanges> Tran_ShiftPatternChanges { get; set; }
        public virtual DbSet<Tran_ManualAttendance> Tran_ManualAttendance { get; set; }
        public virtual DbSet<Tran_Absence> Tran_Absence { get; set; }
        public virtual DbSet<VisitorPassLog> VisitorPassLogs { get; set; }
        public virtual DbSet<VisitorSwipeLog> VisitorSwipeLogs { get; set; }
        public virtual DbSet<Vw_MainGateSwipeRawData> Vw_MainGateSwipeRawData { get; set; }
        public virtual DbSet<Master_DutyType> Master_DutyType { get; set; }
        public virtual DbSet<Tran_DutyRota> Tran_DutyRota { get; set; }
        public virtual DbSet<Master_ContractEmployee> Master_ContractEmployee { get; set; }
        public virtual DbSet<Master_ProcessLocks> Master_ProcessLocks { get; set; }
        public virtual DbSet<OvertimeWFEmailDelivery> OvertimeWFEmailDeliveries { get; set; }
        public virtual DbSet<OvertimeWFApprovalHistory> OvertimeWFApprovalHistories { get; set; }
        public virtual DbSet<OvertimeWFRoutineHistory> OvertimeWFRoutineHistories { get; set; }
        public virtual DbSet<OvertimeWFTransactionActivity> OvertimeWFTransactionActivities { get; set; }
        public virtual DbSet<SystemErrorLog> SystemErrorLogs { get; set; }
        public virtual DbSet<Master_EmployeeAdditional> Master_EmployeeAdditional { get; set; }
        public virtual DbSet<OvertimeRequest> OvertimeRequests { get; set; }
        public virtual DbSet<Master_ShiftPatternTitles> Master_ShiftPatternTitles { get; set; }
        public virtual DbSet<Master_ShiftTimes> Master_ShiftTimes { get; set; }
        public virtual DbSet<Master_ShiftPattern> Master_ShiftPattern { get; set; }
        public virtual DbSet<System_Values> System_Values { get; set; }
        public virtual DbSet<DeathReasonOfAbsence> DeathReasonOfAbsences { get; set; }
    
        public virtual ObjectResult<Pr_GetEmployeeInfo_Result> GetEmployeeInfo(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmployeeInfo_Result>("GetEmployeeInfo", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_Get_Permitted_CostCenter_Result> GetPermittedCostCenter(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("EmpNo", empNo) :
                new ObjectParameter("EmpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Get_Permitted_CostCenter_Result>("GetPermittedCostCenter", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetEmployeeSwipeInfo_Result> GetEmployeeSwipeHistory(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> empNo, string costCenter, string locationName, string readerName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var locationNameParameter = locationName != null ?
                new ObjectParameter("locationName", locationName) :
                new ObjectParameter("locationName", typeof(string));
    
            var readerNameParameter = readerName != null ?
                new ObjectParameter("readerName", readerName) :
                new ObjectParameter("readerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmployeeSwipeInfo_Result>("GetEmployeeSwipeHistory", startDateParameter, endDateParameter, empNoParameter, costCenterParameter, locationNameParameter, readerNameParameter);
        }
    
        public virtual ObjectResult<Pr_GetAccessReaders_Result> GetAccessReaders(Nullable<int> loadType, Nullable<int> locationCode, Nullable<int> readerNo)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(int));
    
            var locationCodeParameter = locationCode.HasValue ?
                new ObjectParameter("locationCode", locationCode) :
                new ObjectParameter("locationCode", typeof(int));
    
            var readerNoParameter = readerNo.HasValue ?
                new ObjectParameter("readerNo", readerNo) :
                new ObjectParameter("readerNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAccessReaders_Result>("GetAccessReaders", loadTypeParameter, locationCodeParameter, readerNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetAbsencesHistory_Result2> GetAbsencesHistory(Nullable<int> empNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAbsencesHistory_Result2>("GetAbsencesHistory", empNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetLeaveHistory_Result2> GetLeaveHistory(Nullable<int> empNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetLeaveHistory_Result2>("GetLeaveHistory", empNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetAttendanceHistory_Result1> GetAttendanceHistory(Nullable<int> empNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAttendanceHistory_Result1>("GetAttendanceHistory", empNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetLeaveInformation_Result3> GetLeaveInformation(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetLeaveInformation_Result3>("GetLeaveInformation", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetDILEntitlement_Result> GetDILEntitlements(Nullable<byte> loadType, Nullable<int> empNo, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDILEntitlement_Result>("GetDILEntitlements", loadTypeParameter, empNoParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetShiftPatternInfo_Result2> GetShiftPatternInfo(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetShiftPatternInfo_Result2>("GetShiftPatternInfo", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetDependentInfo_Result> GetDependentInfo(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDependentInfo_Result>("GetDependentInfo", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetShiftPatternCodes_Result> GetShiftPatternCodes(string shiftPatCode)
        {
            var shiftPatCodeParameter = shiftPatCode != null ?
                new ObjectParameter("shiftPatCode", shiftPatCode) :
                new ObjectParameter("shiftPatCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetShiftPatternCodes_Result>("GetShiftPatternCodes", shiftPatCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetShiftPointer_Result> GetShiftPointer(string shiftPatCode)
        {
            var shiftPatCodeParameter = shiftPatCode != null ?
                new ObjectParameter("shiftPatCode", shiftPatCode) :
                new ObjectParameter("shiftPatCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetShiftPointer_Result>("GetShiftPointer", shiftPatCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetFireTeamMember_Result> GetFireTeamMember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetFireTeamMember_Result>("GetFireTeamMember");
        }
    
        public virtual int GetShiftPatternChanges(Nullable<int> autoID, Nullable<byte> loadType, Nullable<int> empNo, string changeType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("autoID", autoID) :
                new ObjectParameter("autoID", typeof(int));
    
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var changeTypeParameter = changeType != null ?
                new ObjectParameter("changeType", changeType) :
                new ObjectParameter("changeType", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetShiftPatternChanges", autoIDParameter, loadTypeParameter, empNoParameter, changeTypeParameter, startDateParameter, endDateParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Pr_GetUDCListItem_Result> GetUDCListItem(string udcKey)
        {
            var udcKeyParameter = udcKey != null ?
                new ObjectParameter("udcKey", udcKey) :
                new ObjectParameter("udcKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetUDCListItem_Result>("GetUDCListItem", udcKeyParameter);
        }
    
        public virtual ObjectResult<Pr_Get_Permitted_CostCenter_V2_Result1> GetPermittedCostCenterV2(Nullable<int> empNo, string appCode)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var appCodeParameter = appCode != null ?
                new ObjectParameter("appCode", appCode) :
                new ObjectParameter("appCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Get_Permitted_CostCenter_V2_Result1>("GetPermittedCostCenterV2", empNoParameter, appCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetAnnualLeaveButSwiped_Result1> GetAnnualLeaveButSwiped(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> empNo, string costCenter)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAnnualLeaveButSwiped_Result1>("GetAnnualLeaveButSwiped", startDateParameter, endDateParameter, empNoParameter, costCenterParameter);
        }
    
        public virtual ObjectResult<Pr_GetResignedButSwiped_Result1> GetResignedButSwiped(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> empNo, string costCenter, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetResignedButSwiped_Result1>("GetResignedButSwiped", startDateParameter, endDateParameter, empNoParameter, costCenterParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Pr_GetResignedButSwiped_V2_Result> GetResignedButSwipedV2(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> empNo, string costCenter)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetResignedButSwiped_V2_Result>("GetResignedButSwipedV2", startDateParameter, endDateParameter, empNoParameter, costCenterParameter);
        }
    
        public virtual ObjectResult<Pr_Get_UserDefinedCode_Result> GetUserDefinedCode(string uDCGCode)
        {
            var uDCGCodeParameter = uDCGCode != null ?
                new ObjectParameter("UDCGCode", uDCGCode) :
                new ObjectParameter("UDCGCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Get_UserDefinedCode_Result>("GetUserDefinedCode", uDCGCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetTimesheetIntegrity_Result> GetTimesheetIntegrity(string actionCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> empNo, string costCenter)
        {
            var actionCodeParameter = actionCode != null ?
                new ObjectParameter("actionCode", actionCode) :
                new ObjectParameter("actionCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetTimesheetIntegrity_Result>("GetTimesheetIntegrity", actionCodeParameter, startDateParameter, endDateParameter, empNoParameter, costCenterParameter);
        }
    
        public virtual ObjectResult<Pr_GetContractors_Result3> GetContractors(Nullable<int> empNo, string empName)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("empName", empName) :
                new ObjectParameter("empName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetContractors_Result3>("GetContractors", empNoParameter, empNameParameter);
        }
    
        public virtual ObjectResult<Pr_GetTimesheetUDCCodes_Result2> GetTimesheetUDCCodes(Nullable<byte> actionType)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("actionType", actionType) :
                new ObjectParameter("actionType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetTimesheetUDCCodes_Result2>("GetTimesheetUDCCodes", actionTypeParameter);
        }
    
        public virtual ObjectResult<Pr_Retrieve_VisitorPassLog_Result1> GetVisitorPassLog(Nullable<long> logID, string visitorName, string idNumber, Nullable<int> visitorCardNo, Nullable<int> visitEmpNo, string visitCostCenter, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<byte> blockOption, Nullable<int> createdByEmpNo)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("logID", logID) :
                new ObjectParameter("logID", typeof(long));
    
            var visitorNameParameter = visitorName != null ?
                new ObjectParameter("visitorName", visitorName) :
                new ObjectParameter("visitorName", typeof(string));
    
            var idNumberParameter = idNumber != null ?
                new ObjectParameter("idNumber", idNumber) :
                new ObjectParameter("idNumber", typeof(string));
    
            var visitorCardNoParameter = visitorCardNo.HasValue ?
                new ObjectParameter("visitorCardNo", visitorCardNo) :
                new ObjectParameter("visitorCardNo", typeof(int));
    
            var visitEmpNoParameter = visitEmpNo.HasValue ?
                new ObjectParameter("visitEmpNo", visitEmpNo) :
                new ObjectParameter("visitEmpNo", typeof(int));
    
            var visitCostCenterParameter = visitCostCenter != null ?
                new ObjectParameter("visitCostCenter", visitCostCenter) :
                new ObjectParameter("visitCostCenter", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var blockOptionParameter = blockOption.HasValue ?
                new ObjectParameter("blockOption", blockOption) :
                new ObjectParameter("blockOption", typeof(byte));
    
            var createdByEmpNoParameter = createdByEmpNo.HasValue ?
                new ObjectParameter("createdByEmpNo", createdByEmpNo) :
                new ObjectParameter("createdByEmpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Retrieve_VisitorPassLog_Result1>("GetVisitorPassLog", logIDParameter, visitorNameParameter, idNumberParameter, visitorCardNoParameter, visitEmpNoParameter, visitCostCenterParameter, startDateParameter, endDateParameter, blockOptionParameter, createdByEmpNoParameter);
        }
    
        [DbFunction("TASEntities", "GetContractorWorkDuration")]
        public virtual IQueryable<fnGetContractorWorkDuration_Result1> GetContractorWorkDuration(Nullable<int> empNo, Nullable<System.DateTime> swipeDate, Nullable<int> requiredWorkDuration)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var swipeDateParameter = swipeDate.HasValue ?
                new ObjectParameter("swipeDate", swipeDate) :
                new ObjectParameter("swipeDate", typeof(System.DateTime));
    
            var requiredWorkDurationParameter = requiredWorkDuration.HasValue ?
                new ObjectParameter("requiredWorkDuration", requiredWorkDuration) :
                new ObjectParameter("requiredWorkDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetContractorWorkDuration_Result1>("[TASEntities].[GetContractorWorkDuration](@empNo, @swipeDate, @requiredWorkDuration)", empNoParameter, swipeDateParameter, requiredWorkDurationParameter);
        }
    
        public virtual ObjectResult<Pr_GetMainGateSwipe_Result> GetMainGateSwipe(Nullable<int> empNo, Nullable<System.DateTime> date)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetMainGateSwipe_Result>("GetMainGateSwipe", empNoParameter, dateParameter);
        }
    
        public virtual ObjectResult<Pr_Retrieve_EmpCostCenter_Result> GetManagedCostCenter(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Retrieve_EmpCostCenter_Result>("GetManagedCostCenter", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetAttendanceWithOT_Result3> GetAttendanceWithOT(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<int> empNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAttendanceWithOT_Result3>("GetAttendanceWithOT", startDateParameter, endDateParameter, costCenterParameter, empNoParameter);
        }
    
        public virtual ObjectResult<Pr_InsertUpdateDeleteOvertime_Result> InsertUpdateDeleteOvertime(Nullable<int> autoID, string otReason, string comment, string userID, string otApproved, string mealVoucherEligibilityCode, Nullable<int> otDuration)
        {
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("autoID", autoID) :
                new ObjectParameter("autoID", typeof(int));
    
            var otReasonParameter = otReason != null ?
                new ObjectParameter("otReason", otReason) :
                new ObjectParameter("otReason", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            var otApprovedParameter = otApproved != null ?
                new ObjectParameter("otApproved", otApproved) :
                new ObjectParameter("otApproved", typeof(string));
    
            var mealVoucherEligibilityCodeParameter = mealVoucherEligibilityCode != null ?
                new ObjectParameter("mealVoucherEligibilityCode", mealVoucherEligibilityCode) :
                new ObjectParameter("mealVoucherEligibilityCode", typeof(string));
    
            var otDurationParameter = otDuration.HasValue ?
                new ObjectParameter("otDuration", otDuration) :
                new ObjectParameter("otDuration", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_InsertUpdateDeleteOvertime_Result>("InsertUpdateDeleteOvertime", autoIDParameter, otReasonParameter, commentParameter, userIDParameter, otApprovedParameter, mealVoucherEligibilityCodeParameter, otDurationParameter);
        }
    
        public virtual ObjectResult<Pr_GetOTReason_Result> GetOTReason(Nullable<byte> loadType)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetOTReason_Result>("GetOTReason", loadTypeParameter);
        }
    
        public virtual ObjectResult<Pr_GetTASForms_Result> GetTASForms(string formCode)
        {
            var formCodeParameter = formCode != null ?
                new ObjectParameter("formCode", formCode) :
                new ObjectParameter("formCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetTASForms_Result>("GetTASForms", formCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetDutyROTAReport_Result> GetDutyROTAReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenterList, Nullable<int> empNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterListParameter = costCenterList != null ?
                new ObjectParameter("costCenterList", costCenterList) :
                new ObjectParameter("costCenterList", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDutyROTAReport_Result>("GetDutyROTAReport", startDateParameter, endDateParameter, costCenterListParameter, empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetDailyAttendanceReport_Result2> GetDailyAttendanceReport(Nullable<byte> employeeType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenterList)
        {
            var employeeTypeParameter = employeeType.HasValue ?
                new ObjectParameter("employeeType", employeeType) :
                new ObjectParameter("employeeType", typeof(byte));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterListParameter = costCenterList != null ?
                new ObjectParameter("costCenterList", costCenterList) :
                new ObjectParameter("costCenterList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDailyAttendanceReport_Result2>("GetDailyAttendanceReport", employeeTypeParameter, startDateParameter, endDateParameter, costCenterListParameter);
        }
    
        public virtual ObjectResult<Pr_GetAbsenceReasonReport_Result2> GetAbsenceReasonReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<byte> employeeType, string costCenter, Nullable<int> empNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var employeeTypeParameter = employeeType.HasValue ?
                new ObjectParameter("employeeType", employeeType) :
                new ObjectParameter("employeeType", typeof(byte));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAbsenceReasonReport_Result2>("GetAbsenceReasonReport", startDateParameter, endDateParameter, employeeTypeParameter, costCenterParameter, empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetDILDueToLateEntryDutyROTA_Result> GetDILDueToLateEntryDutyROTA(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<int> empNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDILDueToLateEntryDutyROTA_Result>("GetDILDueToLateEntryDutyROTA", startDateParameter, endDateParameter, costCenterParameter, empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetDILReport_Result> GetDILReport(Nullable<int> empNo, string costCenter, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDILReport_Result>("GetDILReport", empNoParameter, costCenterParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetWeeklyOvertimeReport_Result> GetWeeklyOvertimeReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenterList)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterListParameter = costCenterList != null ?
                new ObjectParameter("costCenterList", costCenterList) :
                new ObjectParameter("costCenterList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetWeeklyOvertimeReport_Result>("GetWeeklyOvertimeReport", startDateParameter, endDateParameter, costCenterListParameter);
        }
    
        public virtual ObjectResult<Pr_GetAspirePayrollReportData_V2_Result1> GetAspirePayrollReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> processType)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var processTypeParameter = processType.HasValue ?
                new ObjectParameter("processType", processType) :
                new ObjectParameter("processType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetAspirePayrollReportData_V2_Result1>("GetAspirePayrollReport", startDateParameter, endDateParameter, processTypeParameter);
        }
    
        public virtual ObjectResult<Pr_GetPunctualityReport_Result2> GetPunctualityReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<bool> showDayOff, Nullable<bool> showCount)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var showDayOffParameter = showDayOff.HasValue ?
                new ObjectParameter("showDayOff", showDayOff) :
                new ObjectParameter("showDayOff", typeof(bool));
    
            var showCountParameter = showCount.HasValue ?
                new ObjectParameter("showCount", showCount) :
                new ObjectParameter("showCount", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetPunctualityReport_Result2>("GetPunctualityReport", startDateParameter, endDateParameter, costCenterParameter, showDayOffParameter, showCountParameter);
        }
    
        public virtual ObjectResult<Pr_GetEmployeeInfo_JDE_Result4> GetEmployeeInfoJDE(Nullable<int> empNo, string costCenter, Nullable<bool> isActiveOnly)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var isActiveOnlyParameter = isActiveOnly.HasValue ?
                new ObjectParameter("isActiveOnly", isActiveOnly) :
                new ObjectParameter("isActiveOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmployeeInfo_JDE_Result4>("GetEmployeeInfoJDE", empNoParameter, costCenterParameter, isActiveOnlyParameter);
        }
    
        public virtual ObjectResult<Pr_GetTASJDEComparisonReport_Result> GetTASJDEComparisonReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetTASJDEComparisonReport_Result>("GetTASJDEComparisonReport");
        }
    
        public virtual ObjectResult<Pr_Master_ContractEmployee_CRUD_Result> InsertUpdateDeleteContractEmployee(Nullable<int> actionType, Nullable<int> autoID, Nullable<int> empNo, string contractorEmpName, string groupCode, Nullable<double> contractorNumber, Nullable<System.DateTime> dateJoined, Nullable<System.DateTime> dateResigned, string shiftPatCode, Nullable<int> shiftPointer, string religionCode, string lastUpdateUser)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("actionType", actionType) :
                new ObjectParameter("actionType", typeof(int));
    
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("autoID", autoID) :
                new ObjectParameter("autoID", typeof(int));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var contractorEmpNameParameter = contractorEmpName != null ?
                new ObjectParameter("contractorEmpName", contractorEmpName) :
                new ObjectParameter("contractorEmpName", typeof(string));
    
            var groupCodeParameter = groupCode != null ?
                new ObjectParameter("groupCode", groupCode) :
                new ObjectParameter("groupCode", typeof(string));
    
            var contractorNumberParameter = contractorNumber.HasValue ?
                new ObjectParameter("contractorNumber", contractorNumber) :
                new ObjectParameter("contractorNumber", typeof(double));
    
            var dateJoinedParameter = dateJoined.HasValue ?
                new ObjectParameter("dateJoined", dateJoined) :
                new ObjectParameter("dateJoined", typeof(System.DateTime));
    
            var dateResignedParameter = dateResigned.HasValue ?
                new ObjectParameter("dateResigned", dateResigned) :
                new ObjectParameter("dateResigned", typeof(System.DateTime));
    
            var shiftPatCodeParameter = shiftPatCode != null ?
                new ObjectParameter("shiftPatCode", shiftPatCode) :
                new ObjectParameter("shiftPatCode", typeof(string));
    
            var shiftPointerParameter = shiftPointer.HasValue ?
                new ObjectParameter("shiftPointer", shiftPointer) :
                new ObjectParameter("shiftPointer", typeof(int));
    
            var religionCodeParameter = religionCode != null ?
                new ObjectParameter("religionCode", religionCode) :
                new ObjectParameter("religionCode", typeof(string));
    
            var lastUpdateUserParameter = lastUpdateUser != null ?
                new ObjectParameter("lastUpdateUser", lastUpdateUser) :
                new ObjectParameter("lastUpdateUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Master_ContractEmployee_CRUD_Result>("InsertUpdateDeleteContractEmployee", actionTypeParameter, autoIDParameter, empNoParameter, contractorEmpNameParameter, groupCodeParameter, contractorNumberParameter, dateJoinedParameter, dateResignedParameter, shiftPatCodeParameter, shiftPointerParameter, religionCodeParameter, lastUpdateUserParameter);
        }
    
        public virtual ObjectResult<Pr_GetGARMCOCalendar_Result1> GetGARMCOCalendar(Nullable<int> year, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetGARMCOCalendar_Result1>("GetGARMCOCalendar", yearParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetCostCenterManager_Result1> GetCostCenterManager(string costCenter, string companyCode)
        {
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var companyCodeParameter = companyCode != null ?
                new ObjectParameter("companyCode", companyCode) :
                new ObjectParameter("companyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetCostCenterManager_Result1>("GetCostCenterManager", costCenterParameter, companyCodeParameter);
        }
    
        public virtual ObjectResult<Pr_GetCostCenter_V2_Result> GetCostCenter(Nullable<byte> loadType)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetCostCenter_V2_Result>("GetCostCenter", loadTypeParameter);
        }
    
        public virtual ObjectResult<Pr_GetEmployeeDirectory_Result3> GetEmployeeDirectory(Nullable<int> empNo, string costCenter, string searchString)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var searchStringParameter = searchString != null ?
                new ObjectParameter("searchString", searchString) :
                new ObjectParameter("searchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmployeeDirectory_Result3>("GetEmployeeDirectory", empNoParameter, costCenterParameter, searchStringParameter);
        }
    
        public virtual ObjectResult<Pr_GetDailyAttendanceSalaryStaff_Result> GetDailyAttendanceSalaryStaff(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenterList)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterListParameter = costCenterList != null ?
                new ObjectParameter("costCenterList", costCenterList) :
                new ObjectParameter("costCenterList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetDailyAttendanceSalaryStaff_Result>("GetDailyAttendanceSalaryStaff", startDateParameter, endDateParameter, costCenterListParameter);
        }
    
        public virtual ObjectResult<Pr_Tran_ManualAttendance_CRUD_Result1> InsertUpdateDeleteManualAttendance(Nullable<int> actionType, Nullable<int> autoID, Nullable<int> empNo, Nullable<System.DateTime> dtIN, Nullable<System.DateTime> timeIN, Nullable<System.DateTime> dtOUT, Nullable<System.DateTime> timeOUT, string userID)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("actionType", actionType) :
                new ObjectParameter("actionType", typeof(int));
    
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("autoID", autoID) :
                new ObjectParameter("autoID", typeof(int));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var dtINParameter = dtIN.HasValue ?
                new ObjectParameter("dtIN", dtIN) :
                new ObjectParameter("dtIN", typeof(System.DateTime));
    
            var timeINParameter = timeIN.HasValue ?
                new ObjectParameter("timeIN", timeIN) :
                new ObjectParameter("timeIN", typeof(System.DateTime));
    
            var dtOUTParameter = dtOUT.HasValue ?
                new ObjectParameter("dtOUT", dtOUT) :
                new ObjectParameter("dtOUT", typeof(System.DateTime));
    
            var timeOUTParameter = timeOUT.HasValue ?
                new ObjectParameter("timeOUT", timeOUT) :
                new ObjectParameter("timeOUT", typeof(System.DateTime));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Tran_ManualAttendance_CRUD_Result1>("InsertUpdateDeleteManualAttendance", actionTypeParameter, autoIDParameter, empNoParameter, dtINParameter, timeINParameter, dtOUTParameter, timeOUTParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Pr_GetEmpAttendanceHistory_Result7> GetEmpAttendanceHistory(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<int> empNo)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmpAttendanceHistory_Result7>("GetEmpAttendanceHistory", startDateParameter, endDateParameter, costCenterParameter, empNoParameter);
        }
    
        public virtual ObjectResult<Pr_PunctualitySummaryReport_Result3> GetPunctualitySummaryReport(Nullable<byte> loadType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<int> occurenceLimit, Nullable<int> lateAttendanceThreshold, Nullable<int> earlyLeavingThreshold, Nullable<bool> hideDayOffHoliday)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var occurenceLimitParameter = occurenceLimit.HasValue ?
                new ObjectParameter("occurenceLimit", occurenceLimit) :
                new ObjectParameter("occurenceLimit", typeof(int));
    
            var lateAttendanceThresholdParameter = lateAttendanceThreshold.HasValue ?
                new ObjectParameter("lateAttendanceThreshold", lateAttendanceThreshold) :
                new ObjectParameter("lateAttendanceThreshold", typeof(int));
    
            var earlyLeavingThresholdParameter = earlyLeavingThreshold.HasValue ?
                new ObjectParameter("earlyLeavingThreshold", earlyLeavingThreshold) :
                new ObjectParameter("earlyLeavingThreshold", typeof(int));
    
            var hideDayOffHolidayParameter = hideDayOffHoliday.HasValue ?
                new ObjectParameter("hideDayOffHoliday", hideDayOffHoliday) :
                new ObjectParameter("hideDayOffHoliday", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_PunctualitySummaryReport_Result3>("GetPunctualitySummaryReport", loadTypeParameter, startDateParameter, endDateParameter, costCenterParameter, occurenceLimitParameter, lateAttendanceThresholdParameter, earlyLeavingThresholdParameter, hideDayOffHolidayParameter);
        }
    
        public virtual ObjectResult<Pr_GetOvertimeByPeriod_Result> GetOvertimeByPeriod(Nullable<int> currentUserEmpNo, Nullable<byte> dataFilterID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string costCenter, Nullable<int> empNo, Nullable<long> otRequestNo, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var currentUserEmpNoParameter = currentUserEmpNo.HasValue ?
                new ObjectParameter("currentUserEmpNo", currentUserEmpNo) :
                new ObjectParameter("currentUserEmpNo", typeof(int));
    
            var dataFilterIDParameter = dataFilterID.HasValue ?
                new ObjectParameter("dataFilterID", dataFilterID) :
                new ObjectParameter("dataFilterID", typeof(byte));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var otRequestNoParameter = otRequestNo.HasValue ?
                new ObjectParameter("otRequestNo", otRequestNo) :
                new ObjectParameter("otRequestNo", typeof(long));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("pageNumber", pageNumber) :
                new ObjectParameter("pageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetOvertimeByPeriod_Result>("GetOvertimeByPeriod", currentUserEmpNoParameter, dataFilterIDParameter, startDateParameter, endDateParameter, costCenterParameter, empNoParameter, otRequestNoParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Pr_GetEmployeeEmailAddress_Result> GetEmployeeEmailAddress(Nullable<int> empNo, string costCenter)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetEmployeeEmailAddress_Result>("GetEmployeeEmailAddress", empNoParameter, costCenterParameter);
        }
    
        public virtual ObjectResult<Pr_GetOTApprovalHistory_Result> GetOTApprovalHistory(Nullable<long> otRequestNo, Nullable<int> tsAutoID, Nullable<System.DateTime> requestSubmissionDate)
        {
            var otRequestNoParameter = otRequestNo.HasValue ?
                new ObjectParameter("otRequestNo", otRequestNo) :
                new ObjectParameter("otRequestNo", typeof(long));
    
            var tsAutoIDParameter = tsAutoID.HasValue ?
                new ObjectParameter("tsAutoID", tsAutoID) :
                new ObjectParameter("tsAutoID", typeof(int));
    
            var requestSubmissionDateParameter = requestSubmissionDate.HasValue ?
                new ObjectParameter("requestSubmissionDate", requestSubmissionDate) :
                new ObjectParameter("requestSubmissionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetOTApprovalHistory_Result>("GetOTApprovalHistory", otRequestNoParameter, tsAutoIDParameter, requestSubmissionDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetRequisitionApprover_Result> GetRequisitionApprover(Nullable<long> otRequestNo, Nullable<int> tsAutoID, Nullable<System.DateTime> requestSubmissionDate)
        {
            var otRequestNoParameter = otRequestNo.HasValue ?
                new ObjectParameter("otRequestNo", otRequestNo) :
                new ObjectParameter("otRequestNo", typeof(long));
    
            var tsAutoIDParameter = tsAutoID.HasValue ?
                new ObjectParameter("tsAutoID", tsAutoID) :
                new ObjectParameter("tsAutoID", typeof(int));
    
            var requestSubmissionDateParameter = requestSubmissionDate.HasValue ?
                new ObjectParameter("requestSubmissionDate", requestSubmissionDate) :
                new ObjectParameter("requestSubmissionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetRequisitionApprover_Result>("GetRequisitionApprover", otRequestNoParameter, tsAutoIDParameter, requestSubmissionDateParameter);
        }
    
        public virtual ObjectResult<Pr_GetCostCenterOTAllowed_Result1> GetCostCenterOTAllowed(Nullable<int> userEmpNo)
        {
            var userEmpNoParameter = userEmpNo.HasValue ?
                new ObjectParameter("userEmpNo", userEmpNo) :
                new ObjectParameter("userEmpNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetCostCenterOTAllowed_Result1>("GetCostCenterOTAllowed", userEmpNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetShiftPatternCodes_V2_Result1> GetShiftPatternCodesV2(string shiftPatCode)
        {
            var shiftPatCodeParameter = shiftPatCode != null ?
                new ObjectParameter("shiftPatCode", shiftPatCode) :
                new ObjectParameter("shiftPatCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetShiftPatternCodes_V2_Result1>("GetShiftPatternCodesV2", shiftPatCodeParameter);
        }
    
        [DbFunction("TASEntities", "IsHROTApprover")]
        public virtual IQueryable<Nullable<bool>> IsHROTApprover(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[IsHROTApprover](@empNo)", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetWorkingCostCenter_Result6> GetWorkingCostCenter(Nullable<int> autoID, Nullable<int> empNo, string costCenter, string specialJobCatg)
        {
            var autoIDParameter = autoID.HasValue ?
                new ObjectParameter("autoID", autoID) :
                new ObjectParameter("autoID", typeof(int));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            var specialJobCatgParameter = specialJobCatg != null ?
                new ObjectParameter("specialJobCatg", specialJobCatg) :
                new ObjectParameter("specialJobCatg", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetWorkingCostCenter_Result6>("GetWorkingCostCenter", autoIDParameter, empNoParameter, costCenterParameter, specialJobCatgParameter);
        }
    
        [DbFunction("TASEntities", "CheckIfPayrollProcessing")]
        public virtual IQueryable<Nullable<bool>> CheckIfPayrollProcessing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[CheckIfPayrollProcessing]()");
        }
    
        public virtual ObjectResult<Pr_GetFireTeamAttendance_V2_Result> GetFireTeamAttendanceV2(Nullable<byte> loadType, Nullable<System.DateTime> processDate, Nullable<int> empNo, string costCenter)
        {
            var loadTypeParameter = loadType.HasValue ?
                new ObjectParameter("loadType", loadType) :
                new ObjectParameter("loadType", typeof(byte));
    
            var processDateParameter = processDate.HasValue ?
                new ObjectParameter("processDate", processDate) :
                new ObjectParameter("processDate", typeof(System.DateTime));
    
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("costCenter", costCenter) :
                new ObjectParameter("costCenter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetFireTeamAttendance_V2_Result>("GetFireTeamAttendanceV2", loadTypeParameter, processDateParameter, empNoParameter, costCenterParameter);
        }
    
        [DbFunction("TASEntities", "GetAssignedCostCenter")]
        public virtual IQueryable<fnGetAssignedCostCenter_Result> GetAssignedCostCenter(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetAssignedCostCenter_Result>("[TASEntities].[GetAssignedCostCenter](@empNo)", empNoParameter);
        }
    
        [DbFunction("TASEntities", "IsOTBudgetAdmin")]
        public virtual IQueryable<Nullable<bool>> IsOTBudgetAdmin(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[IsOTBudgetAdmin](@empNo)", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetWorkingCostCenterHistory_Result> GetWorkingCostCenterHistory(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetWorkingCostCenterHistory_Result>("GetWorkingCostCenterHistory", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetShiftCode_Result2> GetShiftCode(string shiftCode)
        {
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("shiftCode", shiftCode) :
                new ObjectParameter("shiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetShiftCode_Result2>("GetShiftCode", shiftCodeParameter);
        }
    
        public virtual ObjectResult<Pr_Master_ShiftPattern_CRUD_Result1> InsertUpdateDeleteMasterShiftPattern(Nullable<byte> actionType, string shiftPatCode, Nullable<int> shiftPointer, string shiftCode)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("actionType", actionType) :
                new ObjectParameter("actionType", typeof(byte));
    
            var shiftPatCodeParameter = shiftPatCode != null ?
                new ObjectParameter("shiftPatCode", shiftPatCode) :
                new ObjectParameter("shiftPatCode", typeof(string));
    
            var shiftPointerParameter = shiftPointer.HasValue ?
                new ObjectParameter("shiftPointer", shiftPointer) :
                new ObjectParameter("shiftPointer", typeof(int));
    
            var shiftCodeParameter = shiftCode != null ?
                new ObjectParameter("shiftCode", shiftCode) :
                new ObjectParameter("shiftCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_Master_ShiftPattern_CRUD_Result1>("InsertUpdateDeleteMasterShiftPattern", actionTypeParameter, shiftPatCodeParameter, shiftPointerParameter, shiftCodeParameter);
        }
    
        [DbFunction("TASEntities", "CheckIfPayrollProcessingByEmpNo")]
        public virtual IQueryable<Nullable<bool>> CheckIfPayrollProcessingByEmpNo(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[CheckIfPayrollProcessingByEmpNo](@empNo)", empNoParameter);
        }
    
        [DbFunction("TASEntities", "CanAccessEmergencyContact")]
        public virtual IQueryable<Nullable<bool>> CanAccessEmergencyContact(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[CanAccessEmergencyContact](@empNo)", empNoParameter);
        }
    
        [DbFunction("TASEntities", "CanAccessDependentInfo")]
        public virtual IQueryable<Nullable<bool>> CanAccessDependentInfo(Nullable<int> empNo)
        {
            var empNoParameter = empNo.HasValue ?
                new ObjectParameter("empNo", empNo) :
                new ObjectParameter("empNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Nullable<bool>>("[TASEntities].[CanAccessDependentInfo](@empNo)", empNoParameter);
        }
    
        public virtual ObjectResult<Pr_GetFamilyRelativeSetting_Result> GetFamilyRelativeSetting(Nullable<byte> degreeLevel, string relativeTypeCode)
        {
            var degreeLevelParameter = degreeLevel.HasValue ?
                new ObjectParameter("degreeLevel", degreeLevel) :
                new ObjectParameter("degreeLevel", typeof(byte));
    
            var relativeTypeCodeParameter = relativeTypeCode != null ?
                new ObjectParameter("relativeTypeCode", relativeTypeCode) :
                new ObjectParameter("relativeTypeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pr_GetFamilyRelativeSetting_Result>("GetFamilyRelativeSetting", degreeLevelParameter, relativeTypeCodeParameter);
        }
    }
}
